buildscript {

  ext {
    kotlinVersion = "1.6.10"
    appName = "Hex"
    gdxVersion = '1.10.0'
    ktxVersion = "1.10.0-b4"
    visVersion = '1.5.0'
    jacksonVersion = "2.13.1"
    junitVersion = "5.8.2"
    kotlinCoroutineVersion = "1.6.0"
    argparserVersion = "2.0.7"
    spotlessVersion = "5.12.4"
    androidGraleToolsVersion = "7.0.0"
    ktlintVersion = "0.41.0"
  }

  repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://plugins.gradle.org/m2/" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    gradlePluginPortal()
    google()
  }
  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    classpath "com.diffplug.spotless:spotless-plugin-gradle:$spotlessVersion"
    classpath "com.android.tools.build:gradle:$androidGraleToolsVersion"
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_17.getName()
  }
}

subprojects {
  apply plugin: "idea"
  apply plugin: "com.diffplug.spotless"

  version = '1.1.1-SNAPSHOT'

  repositories {
    mavenLocal()
    mavenCentral()
    gradlePluginPortal()
    google()
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    maven { url "https://oss.sonatype.org/content/repositories/releases/" }
  }

  spotless {
    kotlin {
      ktlint(ktlintVersion).userData([
         "indent_size"             : "2",
         "continuation_indent_size": "2",
         "max_line_length"         : "180"
      ])
    }
    format 'misc', {
      // define the files to apply `misc` to
      target '*.kt', '*.gradle', '*.md', '.gitignore'

      // define the steps to apply to those files
      trimTrailingWhitespace()
      indentWithSpaces(2)
      endWithNewline()
    }
  }
  assemble.dependsOn(spotlessApply)
}

tasks.named('wrapper') {
  distributionType = Wrapper.DistributionType.BIN
}

project(":android") {
  apply plugin: "com.android.application"
  apply plugin: 'kotlin-android'

  configurations { natives }

  dependencies {
    implementation project(":core")

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinCoroutineVersion"

    api "com.badlogicgames.gdx:gdx-backend-android:$gdxVersion"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-x86_64"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-box2d-platform:$gdxVersion:natives-x86_64"

    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-armeabi-v7a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-arm64-v8a"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86"
    natives "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-x86_64"

  }
}

project(":desktop") {

  apply plugin: "kotlin"

  dependencies {
    api project(":core")
    api "com.badlogicgames.gdx:gdx-backend-lwjgl:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    api "com.badlogicgames.gdx:gdx-freetype-platform:$gdxVersion:natives-desktop"
  }

  test {
    useJUnitPlatform()
  }
}

project(":core") {

  apply plugin: "kotlin"

  dependencies {
    api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"
    api "com.xenomachina:kotlin-argparser:$argparserVersion"

    api "com.badlogicgames.gdx:gdx:$gdxVersion"
    api "com.badlogicgames.gdx:gdx-freetype:$gdxVersion"
//    api "com.badlogicgames.gdx:gdx-ai:$aiVersion"
    api "com.kotcrab.vis:vis-ui:$visVersion"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinCoroutineVersion"

    api "io.github.libktx:ktx-app:$ktxVersion"
    implementation "io.github.libktx:ktx-vis:$ktxVersion"
    implementation "io.github.libktx:ktx-vis-style:$ktxVersion"
    implementation "io.github.libktx:ktx-style:$ktxVersion"
    implementation "io.github.libktx:ktx-actors:$ktxVersion"
    implementation "io.github.libktx:ktx-collections:$ktxVersion"
    implementation "io.github.libktx:ktx-graphics:$ktxVersion"
    implementation "io.github.libktx:ktx-async:$ktxVersion"
    implementation "io.github.libktx:ktx-assets:$ktxVersion"

    api "com.badlogicgames.gdx:gdx-tools:$gdxVersion"

    api "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"

    testApi "org.jetbrains.kotlin:kotlin-test-junit5:$kotlinVersion"
    testApi("org.junit.jupiter:junit-jupiter-api:$junitVersion")
    testApi "com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion"
    testApi "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
  }
}
